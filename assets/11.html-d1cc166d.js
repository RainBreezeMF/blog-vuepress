import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as t,c as p,a as e,b as n,e as s,d as l}from"./app-2d3372ca.js";const d={},r=e("h1",{id:"一、前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),n(" 一、前言")],-1),c=e("p",null,"不知你在为自己的 Hexo 博客写文章时是什么流程呢？",-1),h=e("p",null,"本地用 Markdown 软件写好以后传上去？在 Vscode Codespace 里写完直接上传仓库同步部署？（采用此类方式的请退出本文）",-1),u=e("p",null,"虽然没人能具体规定我们要如何使用 Hexo、上传信息到 Hexo 根目录等，公认的流程是：",-1),m=e("p",null,"本地 Hexo 项目 -> Git 上传 -> 静态托管平台",-1),g=e("p",null,"好吧，有些时候我们其实可以尝试下一体化管理你在博客发布的文章、页面等的面板。",-1),b={href:"https://github.com/jaredly/hexo-admin",target:"_blank",rel:"noopener noreferrer"},x=e("strong",null,"hexo-admin",-1),v=e("figure",null,[e("img",{src:"https://pic.mufeng086.com/i/2023/07/25/xnlae1.webp",alt:"hexo-admin 示例页面",tabindex:"0",loading:"lazy"}),e("figcaption",null,"hexo-admin 示例页面")],-1),f={href:"https://github.com/gethexon/hexon",target:"_blank",rel:"noopener noreferrer"},_=e("strong",null,"Hexon",-1),k=l(`<hr><h1 id="二、简介" tabindex="-1"><a class="header-anchor" href="#二、简介" aria-hidden="true">#</a> 二、简介</h1><p>本地编辑后同步至托管平台，相比于直接通过修改仓库文件内容而言，可以上线前自主排查bug，减少因重复修改内容造成无意义的部署资源的浪费等。</p><p>而 Hexon 的主页，相比于上文提到的 hexo-admin 有几个特点：</p><ul><li>功能较为全面</li><li>较为美观（支持自适应深色模式）</li><li>分类明确，结构清晰</li></ul><h2 id="主页" tabindex="-1"><a class="header-anchor" href="#主页" aria-hidden="true">#</a> 主页</h2><figure><img src="https://pic.mufeng086.com/i/2023/07/25/xxbja9.webp" alt="实机实例" tabindex="0" loading="lazy"><figcaption>实机实例</figcaption></figure><p>1：侧边栏：主功能区</p><p>​ 1.1 操作</p><p>​ “部署”：等同于 <code>hexo deploy </code></p><p>​ &quot;生成&quot;：<code>hexo generate </code></p><p>​ “清理”：等同于 <code>hexo clean </code></p><p>​ “同步到 GIT”：一键完成 <code>git commit &amp; git push </code></p><p>​ “从 GIT 同步”：将 Git 仓库内容下载与本地文件同步</p><p>​ 1.2 筛选</p><p>​ 通过文章分类进行显示。</p><p>​ 1.3 分类（等同于 categories）</p><p>2：二级显示区，带有搜索框，可在限定范围进行搜索。</p><p>3：功能栏</p><p>​ 从前至后为“编辑”、“删除”、“同步到 Git ” （后两项可能因bug等原因无法操作故忽略）</p><p>4：标题</p><p>5：更新时间</p><p>6：发布时间</p><p>7：front-mattter 信息区域</p><h2 id="编辑页" tabindex="-1"><a class="header-anchor" href="#编辑页" aria-hidden="true">#</a> 编辑页</h2><figure><img src="https://pic.mufeng086.com/i/2023/07/25/yrm6wu.webp" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>上方功能栏除“保存”按钮（保存至本地）外与主页面的一致。</p><p>右侧信息栏可便捷编辑页面/文章信息，其中“标签”、“分类”可选择已有项（Hexon自动解析），额外的 front-matter 选项可在 “Frontmatters” 填写。</p><hr><h1 id="三、使用" tabindex="-1"><a class="header-anchor" href="#三、使用" aria-hidden="true">#</a> 三、使用</h1><ol><li><p>确保本地（Win/Mac/Linux）已安装以下程序并可用：<code>git</code> <code>hexo</code> <code>Node.js</code></p></li><li><p>安装（先 cd 至要保存的根目录）</p><p>2.1 从 Hexon 源仓库克隆运行目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/gethexon/hexon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.2 安装运行依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（若 pnpm 命令显示无效，而 Node 运行正常，输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install pnpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以启用 pnpm）</p><p>2.3 初始化</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> run setup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://pic.mufeng086.com/i/2023/07/25/yz8ioc.webp" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>此处会弹出几个需要输入的会话，分别如下：</p><p><code>? Which port do you like Hexon running at? (5777)</code>：设置 Hexon 运行端口（默认为5777）</p><p><code>? Your hexo blog path? Absolute or relative path to hexon.</code>：输入 Hexo 博客运行目录</p><p><code>? Username ?</code>：设置 Hexon 用户名</p><p><code>? Password ? [input is hidden]</code>：设置 Hexon 用户密码（此处输入不可见，完成后回车）</p><p>出现以下信息，表示安装完成，可以准备开启 Hexon使用了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>⚙ Install

Hexon has been installed to <span class="token variable"><span class="token variable">\`</span>/root/hexon<span class="token variable">\`</span></span>
Run <span class="token variable"><span class="token variable">\`</span><span class="token function">pnpm</span> start<span class="token variable">\`</span></span> to start
Run <span class="token variable"><span class="token variable">\`</span><span class="token function">pnpm</span> prd<span class="token variable">\`</span></span> to start with pm2
To uninstall, remove the following foler: /root/hexon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注：</strong>&quot;/root/hexon&quot; 为本人安装时的情况，请根据实际情况处理。</p></li><li><p>启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完成后，访问 \`\`localhost/ip（视实际情况而定）:设置的端口（默认5777）\` 即可进入 Hexon</p><p>若想要持久化运行（进程守护），可使用 pm2</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> prd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>移除 Hexon</p><p>删除 Hexon 根目录文件夹即可。</p></li><li><p>其他使用命令</p><p><code>pnpm resetpwd</code>：重置用户密码</p><p><code>pnpm script</code>：管理自定义脚本</p></li></ol><hr>`,32),H={href:"https://github.com/gethexon/hexon",target:"_blank",rel:"noopener noreferrer"};function w(y,N){const a=o("ExternalLinkIcon");return t(),p("div",null,[r,c,h,u,m,g,e("p",null,[n("你可能会问，这不就是 "),e("a",b,[x,s(a)]),n(" 吗？")]),v,e("p",null,[n("不过这稍显不太美观，所以请出今天的主角："),e("a",f,[_,s(a)])]),k,e("p",null,[n("更多详情，请至 Hexon 项目了解："),e("a",H,[n("https://github.com/gethexon/hexon"),s(a)])])])}const I=i(d,[["render",w],["__file","11.html.vue"]]);export{I as default};
